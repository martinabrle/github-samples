# This is a basic checkout, dotnet restore and a multistage docker build, test + ACR publish workflow,
# that is manually triggered there is no dotnet build or unit called explicitelly here as it's all
# handled by using a multistage docker
 
name: dotnet core docker acr manual CI

on:
  workflow_dispatch:

env:
  script-name: dotnet-core-docker-acr-manual-ci
  acr-name: irrelevantwords-maabrle-acr.azurecr.io
  app-name: irrelevantwords-maabrle
  docker-working-directory : 'irrelevant-apis/words'
  image-name: "ORGANISATION_NAME/${{ env.app-name }}"

jobs:
  continuous_integration:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      env:
        NUGET_AUTH_TOKEN: ${{secrets.AZURE_DEVOPS_PAT}} #only needed when using your own package feeds
      with:
        dotnet-version: 2.2.108
        source-url: https://pkgs.dev.azure.com/ORGANISATION_NAME/_packaging/PackageFeed/nuget/v3/index.json #only needed when using your own package feeds
    
    - name: Azure Login
      uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Container build
      run: az acr build --image "${{ env.image-name }}:${{ github.run_id }}-beta" -t "${{ env.image-name }}:latest" --registry ${{ env.acr-name }} --file Dockerfile .
      working-directory: ${{ env.docker-working-director }}
      
    - name: Process errors
      if: ${{ failure() }}
      run: |
          curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/issues \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "title": "${{ env.script-name }} has failed: ${{ github.run_id }}",
              "body": "${{ env.script-name }} has failed: **${{ github.workflow }}**. \n\n Failure in run: _${{ github.run_id }}_."
              }'
